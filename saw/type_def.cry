/*
 * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use
 * this file except in compliance with the License. A copy of the License is
 * located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */


module type_def where


// Compound type that stores all the variables that determine if the loop in the aws_cryptosdk_session_process 
// function of session.c has made progress (line 242)
type state_t = {
                    sess : session_t_c, 
                    output_buffer : aws_byte_cursor_t_c, 
                    input_buffer : aws_byte_cursor_t_c
                    }


// See <aws/cryptosdk/private/session.h>: 50 - 82 
// NOTE: Incomplete implementation - only has the fields necessary for current proofs. 
type session_t_c = {
    output_size_estimate : SIZE_T_BITS, 
    input_size_estimate : SIZE_T_BITS,
    header_size : SIZE_T_BITS,
    state : STATE_SIZE,
    mode : [1], //boolean flag: encrypt (0) or decrypt (1) 
    precise_size : [64],
    data_so_far : [64],
    frame_size : [64], // if frame size is zero, the message is unframed
    precise_size_known : [1],
    alg_prop : alg_properties_t_c,
    header : hdr_t_c
    }

// See <aws/common/byte_buf.h>: 43 - 46 
type aws_byte_cursor_t_c = {
    ptr : SIZE_T_BITS, //TODO: actual size in the c code is [8]. Figure out casting
    len : SIZE_T_BITS
    }

// <aws/cryptosdk/cipher.h>> : 28 - 41
// NOTE: Incomplete implementation - only has the fields necessary for current proofs. 
type alg_properties_t_c = {
    iv_len : SIZE_T_BITS,
    tag_len : SIZE_T_BITS
}

// <aws/cryptosdk/private/header.h>: 32 - 49
// Over-simplified. 
// Multiple fields missing or concatenated. 
type hdr_t_c = {
    aad_len_total : SIZE_T_BITS, // Length of the total amount of aad : sum of the key and value across all aad. 
    edk_len_total : SIZE_T_BITS  // Length of the total edk : sum of provider_id, provider_info and enc_data_key for   
                                    // all edk
}

// <aws/cryptosdk/private/header.h>: 16
MESSAGE_ID_LEN = 16 

// enum of states in the session.c state machine 
// See <aws/cryptosdk/private/session.h>: 26 - 48 

ST_CONFIG = 0

// Decrypt path 

ST_READ_HEADER = 1
ST_UNWRAP_KEY = 2
ST_DECRYPT_BODY = 3
ST_CHECK_TRAILER = 4

// Encrypt path 

ST_GEN_KEY = 5
ST_WRITE_HEADER = 6
ST_ENCRYPT_BODY = 7
ST_WRITE_TRAILER = 8


ST_DONE = 9
ST_ERROR = 10


// <aws/cryptosdk/private/session.h>: 23- 24
DEFAULT_FRAME_SIZE = 256 * 1024
MAX_FRAME_SIZE = 4294967295

type SIZE_T_BITS = [64]
type STATE_SIZE = [32]

SIZE_T_MAX = 2^64-1 //because I used 64 bit integers. Can be updated. 

HEADER_FIELD_OVERHEAD = 18 
HEADER_FIELD_OVERHEAD_WITH_AAD = 20 
DEFAULT_SIZE_INCREMENT = 128 
